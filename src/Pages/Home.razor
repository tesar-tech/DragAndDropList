@page "/"
<article class="prose prose-invert mb-5 ">
	<p>
	This example showcases the use of drag and drop functionality for list ordering in Blazor.
	</p>
	<p>
		If an element contains a complex HTML structure with child elements, you might experience a "flickering" effect during dragenter and dragleave events, leading to a noticeable slowdown.
		A solution to this issue is provided in <a href="Example2">Example 2</a>.
	</p>
</article>

<div class="flex justify-center bg-gray-800">
	
	<ul class="mx-auto my-5 "
	    ondragover="event.preventDefault();"
	    >
	@foreach (var item in Models.OrderBy(x => x.Order))
	{
		<li @ondrop="()=>HandleDrop(item)" @key="item">
			<div class="@(item.IsDragOver ?"border-t-2 border-red-500":"")"
				@ondragleave="@(()=> {item.IsDragOver = false;})"
				@ondragenter="@(()=>{item.IsDragOver = true; })"
				@ondragstart="() => draggingModel = item"
				@ondragend="()=> draggingModel = null" draggable="true">@item.Name</div>
		</li>
	}
</ul>
</div>

@code
{
	private List<Model> Models { get; } = [];

	
	public class Model
	{
		public int Order { get; set; }
		public string Name { get; set; } = "";
		public bool IsDragOver{ get; set; }	
	}

	protected override void OnInitialized()
	{//fill names with "random" string
		for (var i = 0; i < 10; i++)
		{
			Model m = new() { Order = i, Name = $"Item {i}" };
			Models.Add(m);
		}
		base.OnInitialized();
	}

	private void HandleDrop(Model landingModel)
	{//landing model -> where the drop happened
		if (draggingModel is null) return;
		int originalOrderLanding = landingModel.Order;//keep the original order for later
		//increase model under by 1
		Models.Where(x => x.Order >= landingModel.Order).ToList().ForEach(x => x.Order++);
		draggingModel.Order = originalOrderLanding;//replace landing model
		int ii = 0;
		foreach (var model in Models.OrderBy(x=>x.Order).ToList())
		{
			model.Order = ii++;//keep the numbers from 0 to size-1
			model.IsDragOver = false;//remove drag over. 
		}
	}

	private Model? draggingModel;//the model that is being dragged
}